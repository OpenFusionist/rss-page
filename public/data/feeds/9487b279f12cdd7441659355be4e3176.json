[{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"Faster random integer generation with batching","link":"https://lemire.me/blog/2024/08/17/faster-random-integer-generation-with-batching/","author":"Daniel Lemire","rawPubDate":"Sat, 17 Aug 2024 02:11:30 +0000","timestamp":1723860690,"summary":"We often generate random integers. Quite often these numbers must be within an interval: e.g., an integer between 0 and 100. One application is a random shuffle. A standard algorithm for a fair random shuffle is the Knuth algorithm: void shuffle(mytype *storage, uint64_t size) { for (uint64_t i = size; i > 1; i--) { … Continue reading Faster random integer generation with batching"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"Reflection-based JSON in C++ at Gigabytes per Second","link":"https://lemire.me/blog/2024/08/13/reflection-based-json-in-c-at-gigabytes-per-second/","author":"Daniel Lemire","rawPubDate":"Tue, 13 Aug 2024 16:12:46 +0000","timestamp":1723565566,"summary":"JSON (JavaScript Object Notation) is a popular format for storing and transmitting data. It uses human-readable text to represent structured data in the form of attribute–value pairs and arrays. E.g., {\"age\":5, \"name\":\"Daniel\", toys:[\"wooden dog\", \"little car\"]}. Ingesting and producing JSON documents can be a performance bottleneck. Thankfully, a few JSON parsers such as simdjson have … Continue reading Reflection-based JSON in C++ at Gigabytes per Second"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"Converting ASCII strings to lower case at crazy speeds with AVX-512","link":"https://lemire.me/blog/2024/08/03/converting-ascii-strings-to-lower-case-at-crazy-speeds-with-avx-512/","author":"Daniel Lemire","rawPubDate":"Sat, 03 Aug 2024 23:26:22 +0000","timestamp":1722727582,"summary":"AMD Zen 4 and Zen 5, as well as server-side recent Intel processors, support an advanced set of instructions called AVX-512. They are powerful SIMD (Single Instruction, Multiple Data) instructions. Importantly, they allow ‘masked’ operations. That is, you can compute a mask and only do an operation on bytes indicated by the mask. Thus you … Continue reading Converting ASCII strings to lower case at crazy speeds with AVX-512"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"Evolution of iPhone storage capacity","link":"https://lemire.me/blog/2024/07/28/evolution-of-iphone-storage-capacity/","author":"Daniel Lemire","rawPubDate":"Sun, 28 Jul 2024 15:39:06 +0000","timestamp":1722181146,"summary":"People who should know better often underestimate how fast our storage capacity has grown. We have been able to get 1 TB of storage on iPhones for the last three generations. 2010 iPhone 4 32 GB 2012 iPhone 5 64 GB 2014 iPhone 6 128 GB 2016 iPhone 7 256 GB 2018 iPhone XS 512 … Continue reading Evolution of iPhone storage capacity"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"Storage costs are plummeting","link":"https://lemire.me/blog/2024/07/27/storage-costs-are-plummeting/","author":"Daniel Lemire","rawPubDate":"Sat, 27 Jul 2024 21:35:42 +0000","timestamp":1722116142,"summary":"Storage costs are plummeting like a skydiver in freefall—between 10 and 100 times cheaper with each passing decade. Meanwhile, the programmer population is growing at a leisurely pace, like a tortoise in a marathon, increasing by about 50% per decade. And the Linux kernel? It is maybe doubling in size every ten years. The net … Continue reading Storage costs are plummeting"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"How big are your docker images?","link":"https://lemire.me/blog/2024/07/27/how-big-are-your-docker-images/","author":"Daniel Lemire","rawPubDate":"Sat, 27 Jul 2024 17:31:23 +0000","timestamp":1722101483,"summary":"Docker is a standard to deploy software on the cloud. Developers start with an existing image and add their own code before deploying their systems. How big are typical uncompressed images? python:alpine (latest, aarch64) 58 MiB chainguard/bun (latest, aarch64) 90 MiB node:alpine (latest, aarch64) 141 MiB golang:alpine (latest, aarch64) 219 MiB Method: docker inspect -f … Continue reading How big are your docker images?"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"How much of your binary executable is just ASCII text?","link":"https://lemire.me/blog/2024/07/27/how-much-of-your-binary-executable-is-just-ascii-text/","author":"Daniel Lemire","rawPubDate":"Sat, 27 Jul 2024 00:10:07 +0000","timestamp":1722039007,"summary":"We sometimes use binary executable which can span megabytes. I wondered: how much text is contained in these binary files? To find out, I wrote a Python script which adds up the size of all sequences of at least 16 ASCII characters in the file. My heuristic is simple but is not quite perfect: some … Continue reading How much of your binary executable is just ASCII text?"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"Safer code in C++ with lifetime bounds","link":"https://lemire.me/blog/2024/07/26/safer-code-in-c-with-lifetime-bounds/","author":"Daniel Lemire","rawPubDate":"Fri, 26 Jul 2024 15:25:13 +0000","timestamp":1722007513,"summary":"For better performance in software, we avoid unnecessary copies. To do so, we introduce references (or pointers). An example of this ideas in C++ is the std::string_view class. As the name suggests, a std::string_view instance is merely a ‘view’: it points at some string, but it does not own or otherwise manage the underlying memory. … Continue reading Safer code in C++ with lifetime bounds"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"Does C++ allow template specialization by concepts?","link":"https://lemire.me/blog/2024/07/22/does-c-allow-template-specialization-by-concepts/","author":"Daniel Lemire","rawPubDate":"Mon, 22 Jul 2024 15:13:24 +0000","timestamp":1721661204,"summary":"Recent versions of C++ (C++20) have a new feature: concepts. A concept in C++ is a named set of requirements that a type must satisfy. E.g., ‘act like a string’ or ‘act like a number’. In C++, we have two closely related terms: traits and concepts. For example, std::is_floating_point is a type trait that checks … Continue reading Does C++ allow template specialization by concepts?"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"Scan HTML even faster with SIMD instructions (C++ and C#)","link":"https://lemire.me/blog/2024/07/20/scan-html-even-faster-with-simd-instructions-c-and-c/","author":"Daniel Lemire","rawPubDate":"Sat, 20 Jul 2024 21:30:43 +0000","timestamp":1721511043,"summary":"Earlier this year, both major Web engines (WebKit/Safari and Chromium/Chrome/Edge/Brave) accelerated HTML parsing using SIMD instructions. These ‘SIMD’ instructions are special instructions that are present in all our processors that can process multiple bytes at once (e.g., 16 bytes). The problem that WebKit and Chromium solve is to jump to the next target character as … Continue reading Scan HTML even faster with SIMD instructions (C++ and C#)"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"Benchmarking ARM processors: Graviton 4, Graviton 3 and Apple M2","link":"https://lemire.me/blog/2024/07/10/benchmarking-arm-processors-graviton-4-graviton-3-and-apple-m2/","author":"Daniel Lemire","rawPubDate":"Wed, 10 Jul 2024 20:43:45 +0000","timestamp":1720644225,"summary":"The world of commodity processor is roughly divided in two: x64 chips for servers and PCs, and ARM processors for mobile devices. However, ARM chips increasingly common on servers and laptop. My own favorite laptop is an Apple macBook with an M2 chip. Amazon has been producing its own ARM processors (Graviton) and it recently … Continue reading Benchmarking ARM processors: Graviton 4, Graviton 3 and Apple M2"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"Scan HTML faster with SIMD instructions: .NET/C# Edition","link":"https://lemire.me/blog/2024/07/05/scan-html-faster-with-simd-instructions-net-c-edition/","author":"Daniel Lemire","rawPubDate":"Fri, 05 Jul 2024 19:44:50 +0000","timestamp":1720208690,"summary":"Recently, the two major Web engines (WebKit and Chromium) adopted fast SIMD routines to scan HTML content. The key insight is to use vectorized classification (Langdale and Lemire, 2019): you load blocks of characters and identify the characters you seek using a few instructions. In particular, we use ‘SIMD instructions’, special instructions that are available … Continue reading Scan HTML faster with SIMD instructions: .NET/C# Edition"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"How much memory does a call to ‘malloc’  allocate?","link":"https://lemire.me/blog/2024/06/27/how-much-memory-does-a-call-to-malloc-allocates/","author":"Daniel Lemire","rawPubDate":"Thu, 27 Jun 2024 20:41:51 +0000","timestamp":1719520911,"summary":"In C, we allocate memory on the heap using the malloc function. Other programming languages like C++ or zig (e.g., std.heap.c_allocator) may call on malloc underneath so it is important to understand how malloc works. Furthermore, the same concepts apply broadly to other memory allocators. In theory, you could allocate just one byte like so: … Continue reading How much memory does a call to ‘malloc’  allocate?"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"Performance tip: avoid unnecessary copies","link":"https://lemire.me/blog/2024/06/22/performance-tip-avoid-unnecessary-copies/","author":"Daniel Lemire","rawPubDate":"Sat, 22 Jun 2024 19:14:18 +0000","timestamp":1719083658,"summary":"Copying data in software is cheap, but it is not at all free. As you start optimizing your code, you might find that copies become a performance bottleneck. Let me be clear that copies really are cheap. It is often more performant to copy that data than to track the same memory across different threads. … Continue reading Performance tip: avoid unnecessary copies"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"Validating gigabytes of Unicode strings per second… in C#?","link":"https://lemire.me/blog/2024/06/20/validating-gigabytes-of-unicode-strings-per-second-in-c/","author":"Daniel Lemire","rawPubDate":"Thu, 20 Jun 2024 17:25:02 +0000","timestamp":1718904302,"summary":"We have been working on a fast library to validate and transcode Unicode and other formats such as base64 in C++: simdutf. We wondered: could we achieve the same good results in C#? Microsoft’s .NET framework has made great strides in leveraging advanced instructions. For instance, if your processor supports AVX-512, you can instantiate 512-bit … Continue reading Validating gigabytes of Unicode strings per second… in C#?"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"Rolling your own fast matrix multiplication: loop order and vectorization","link":"https://lemire.me/blog/2024/06/13/rolling-your-own-fast-matrix-multiplication-loop-order-and-vectorization/","author":"Daniel Lemire","rawPubDate":"Thu, 13 Jun 2024 21:11:26 +0000","timestamp":1718313086,"summary":"If you must multiply matrices, you should use dedicated libraries. However, we sometimes need to roll our own code. In C++, you can quickly write your own Matrix template: template <typename T> struct Matrix { Matrix(size_t rows, size_t cols) : data(new T[rows * cols]), rows(rows), cols(cols) {} T &operator()(size_t i, size_t j) { return data.get()[i … Continue reading Rolling your own fast matrix multiplication: loop order and vectorization"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"Scan HTML faster with SIMD instructions: Chrome edition","link":"https://lemire.me/blog/2024/06/08/scan-html-faster-with-simd-instructions-chrome-edition/","author":"Daniel Lemire","rawPubDate":"Sat, 08 Jun 2024 04:55:42 +0000","timestamp":1717822542,"summary":"Modern processors have instructions to process several bytes at once. Effectively all processors have the capability of processing 16 bytes at once. These instructions are called SIMD, for single instruction, multiple data. It was once an open question whether these instructions could be useful to accelerate common tasks such as parsing HTML or JSON. However, … Continue reading Scan HTML faster with SIMD instructions: Chrome edition"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"Quickly checking whether a string needs escaping","link":"https://lemire.me/blog/2024/05/31/quickly-checking-whether-a-string-needs-escaping/","author":"Daniel Lemire","rawPubDate":"Fri, 31 May 2024 03:48:21 +0000","timestamp":1717127301,"summary":"In software, we often represent strings by surrounding them with quotes (\"). What happens if the string itself contains quotes? We then need to escape the string. For example, the quote character (\") or the backslash character (\\) should be replaced by \\\" or \\\\. Most programmers are familiar with this process. Most strings do … Continue reading Quickly checking whether a string needs escaping"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"Never reason from the results of a sampling profiler","link":"https://lemire.me/blog/2024/05/30/never-reason-from-the-results-of-a-sampling-profiler/","author":"Daniel Lemire","rawPubDate":"Thu, 30 May 2024 19:33:28 +0000","timestamp":1717097608,"summary":"In the quest for software optimization, a trusty companion is the sampling profiler, a tool available in most programming languages. These profilers work unobtrusively, taking snapshots of the program’s state and recording the currently executing function or instruction. While profilers sound like a silver bullet for identifying performance bottlenecks, their usefulness has limitations. They excel … Continue reading Never reason from the results of a sampling profiler"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"Science and Technology links (May 25 2024)","link":"https://lemire.me/blog/2024/05/26/science-and-technology-links-may-25-2024/","author":"Daniel Lemire","rawPubDate":"Sun, 26 May 2024 01:09:54 +0000","timestamp":1716685794,"summary":"Artificial intelligence is far more efficient at producing content than human beings, as far as carbon emissions go. Human brains got larger by over 5% between 1930 and 1970. Replacing plastics by ‘environment friendly’ alternatives typically results in greater greenhouse gas emissions. Prostate-specific antigen screening has only a small effect on men’s risk of dying … Continue reading Science and Technology links (May 25 2024)"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"Learning from the object-oriented mania","link":"https://lemire.me/blog/2024/05/14/learning-from-the-object-oriented-mania/","author":"Daniel Lemire","rawPubDate":"Tue, 14 May 2024 14:17:42 +0000","timestamp":1715696262,"summary":"Back when I started programming professionally, every expert and every software engineering professor would swear by object-oriented programming. Resistance was futile. History had spoken: the future was object-oriented. It is hard to understate how strong the mania was. In education, we started calling textbooks and videos ‘learning objects‘. Educators would soon ‘combine learning objects and reuse them‘. A competitor … Continue reading Learning from the object-oriented mania"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"Forwarding references in C++","link":"https://lemire.me/blog/2024/05/13/forwarding-references-in-c/","author":"Daniel Lemire","rawPubDate":"Mon, 13 May 2024 15:51:51 +0000","timestamp":1715615511,"summary":"In C++, there are different ways to pass a value to a function. Typically, at any given time, an object in C++ ‘belongs’ to a single function. The various ways to call a function differ in who owns the object, the caller or the callee (the function being called). The simplest one is that we … Continue reading Forwarding references in C++"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"Peer review is not the gold standard in science","link":"https://lemire.me/blog/2024/05/11/peer-review-is-not-the-gold-standard-in-science/","author":"Daniel Lemire","rawPubDate":"Sat, 11 May 2024 22:47:16 +0000","timestamp":1715467636,"summary":"Peer review as we know it today was introduced very late, over a century after the scientific revolution. It happened after Einstein’s time… arguably the most productive era in science. Current scientists often equate a success with the publication in a selective peer-reviewed venue. But that was never the scientific paradigm. In fact, it is … Continue reading Peer review is not the gold standard in science"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"How fast can you construct a small list of strings in C for Python?","link":"https://lemire.me/blog/2024/05/09/how-fast-can-construct-small-list-of-strings-in-c-for-python/","author":"Daniel Lemire","rawPubDate":"Thu, 09 May 2024 03:55:45 +0000","timestamp":1715226945,"summary":"Python is probably the most popular programming language in the world right now. Python is easy to extend using C code. You may want to return from Python a small data structure. When crossing from C to Python, there is an overhead. Thus, if performance is a concern, you do not want to return lots … Continue reading How fast can you construct a small list of strings in C for Python?"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"Should Node.js be built with ClangCL under Windows?","link":"https://lemire.me/blog/2024/05/02/should-node-js-be-built-with-clangcl-under-windows/","author":"Daniel Lemire","rawPubDate":"Thu, 02 May 2024 19:23:11 +0000","timestamp":1714677791,"summary":"Under Windows, when using Visual Studio to build C++ code, there are two possible compiler strategies. The Visual Studio compiler (often referred to as MSVC) is the default compiler provided by Microsoft for Windows development. In Debug mode, the regular Visual Studio compiler produces faster compilation times and more performant code compared to ClangCL. ClangCL … Continue reading Should Node.js be built with ClangCL under Windows?"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"Careful with Pair-of-Registers instructions on Apple Silicon","link":"https://lemire.me/blog/2024/04/29/careful-with-pair-of-registers-instructions-on-apple-silicon/","author":"Daniel Lemire","rawPubDate":"Mon, 29 Apr 2024 00:32:38 +0000","timestamp":1714350758,"summary":"Egor Bogatov is an engineer working on C# compiler technology at Microsoft. He had an intriguing remark about a performance regression on Apple hardware following what appears to be an optimization. The .NET 9.0 runtime introduced the optimization where two loads (ldr) could be combined into a single load (ldp). It is a typical peephole … Continue reading Careful with Pair-of-Registers instructions on Apple Silicon"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"Large language models (e.g., ChatGPT) as research assistants","link":"https://lemire.me/blog/2024/04/27/large-language-models-e-g-chatgpt-as-research-assistants/","author":"Daniel Lemire","rawPubDate":"Sat, 27 Apr 2024 00:05:24 +0000","timestamp":1714176324,"summary":"Software can beat human beings at most games… from Chess to Go, and even poker. Large language models like GPT-4 offered through services such as ChatGPT allow us to solve a new breed of problems. GPT-4 can beat 90% of human beings at the bar exam. Artificial intelligence can match math Olympians. The primary skills … Continue reading Large language models (e.g., ChatGPT) as research assistants"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"How do you recognize an expert?","link":"https://lemire.me/blog/2024/04/21/how-do-you-recognize-an-expert/","author":"Daniel Lemire","rawPubDate":"Sun, 21 Apr 2024 17:35:28 +0000","timestamp":1713720928,"summary":"Go back to the roots: experience. An expert is someone who has repeatedly solved the concrete problem you are encountering. If your toilet leaks, an experienced plumber is an expert. An expert has a track record and has had to face the consequences of their work. Failing is part of what makes an expert: any … Continue reading How do you recognize an expert?"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"How quickly can you break a long string into lines?","link":"https://lemire.me/blog/2024/04/19/how-quickly-can-you-break-a-long-string-into-lines/","author":"Daniel Lemire","rawPubDate":"Fri, 19 Apr 2024 21:25:21 +0000","timestamp":1713561921,"summary":"Suppose that you receive a long string and you need to break it down into lines. Consider the simplified problems where you need to break the string into segments of (say) 72 characters. It is a relevant problem if your string is a base64 string or a Fortran formatted statement. The problem could be a … Continue reading How quickly can you break a long string into lines?"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"Science and Technology links (April 13 2024)","link":"https://lemire.me/blog/2024/04/13/science-and-technology-links-april-13-2024/","author":"Daniel Lemire","rawPubDate":"Sat, 13 Apr 2024 22:31:25 +0000","timestamp":1713047485,"summary":"Our computer hardware exchange data using a standard called PCI Express. Your disk, your network and your GPU are limited by what PCI Express can do. Currently, it means that you are limited to a few gigabytes per second of bandwidth. PCI Express is about to receive a big performance boost in 2025 when PCI … Continue reading Science and Technology links (April 13 2024)"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"Greatest common divisor,  the extended Euclidean algorithm, and speed!","link":"https://lemire.me/blog/2024/04/13/greatest-common-divisor-the-extended-euclidean-algorithm-and-speed/","author":"Daniel Lemire","rawPubDate":"Sat, 13 Apr 2024 20:56:11 +0000","timestamp":1713041771,"summary":"We sometimes need to find the greatest common divisor between two integers in software. The fastest way to compute the greatest common divisor might be the binary Euclidean algorithm. In C++20, it can be implemented generically as follows: template <typename int_type> int_type binary_gcd(int_type u, int_type v) { if (u == 0) { return v; } … Continue reading Greatest common divisor,  the extended Euclidean algorithm, and speed!"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"A simple algorithm to compute the square root of an integer, byte by byte","link":"https://lemire.me/blog/2024/04/11/a-simple-algorithm-to-compute-the-square-root-of-an-integer-byte-by-byte/","author":"Daniel Lemire","rawPubDate":"Thu, 11 Apr 2024 19:39:11 +0000","timestamp":1712864351,"summary":"A reader asked me for some help in computing (1 – sqrt(0.5)) to an arbitrary precision, from scratch. A simpler but equivalent problem is to compute the square root of an integer (e.g., 2). There are many sophisticated algorithms for such problems, but we want something relatively simple. We’d like to compute the square root … Continue reading A simple algorithm to compute the square root of an integer, byte by byte"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"C++ web app with Crow: early scalability results","link":"https://lemire.me/blog/2024/04/06/c-web-app-with-crow-early-scalability-results/","author":"Daniel Lemire","rawPubDate":"Sat, 06 Apr 2024 22:01:26 +0000","timestamp":1712440886,"summary":"Last year, I looked at writing small “hello world” web applications in various programming languages (Go, JavaScript, Nim…). Go, using nothing but the standard library, did well. In these benchmarks, I am just programming an HTTP route that returns a small string (e.g., ‘hello world’). The query is from the host itself. The intent behind … Continue reading C++ web app with Crow: early scalability results"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"Science and Technology links (March 31 2024)","link":"https://lemire.me/blog/2024/03/31/science-and-technology-links-march-31-2024/","author":"Daniel Lemire","rawPubDate":"Sun, 31 Mar 2024 21:24:30 +0000","timestamp":1711920270,"summary":"Large language models (e.g., ChatGPT) do better at legal questions than lawyers: Our empirical analysis benchmarks LLMs against a ground truth set by Senior Lawyers, uncovering that advanced models match or exceed human accuracy in determining legal issues (Martin et al.). Gene therapy-mediated partial reprogramming extends lifespan and reverses age-related changes in aged mice. Increased … Continue reading Science and Technology links (March 31 2024)"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"Fast and concise probabilistic filters in Python","link":"https://lemire.me/blog/2024/03/31/fast-and-concise-probabilistic-filters-in-python/","author":"Daniel Lemire","rawPubDate":"Sun, 31 Mar 2024 18:00:55 +0000","timestamp":1711908055,"summary":"Sometimes you need to filter out or filter in data quickly. Suppose that your employer maintains a list of forbidden passwords or URLs or words. You may store them in a relational database and query them as needed. Unfortunately, this process can be slow and inefficient. A better approach might be to use a probabilistic … Continue reading Fast and concise probabilistic filters in Python"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"Passing recursive C++ lambdas as function pointers","link":"https://lemire.me/blog/2024/03/22/passing-recursive-c-lambdas-as-function-pointers/","author":"Daniel Lemire","rawPubDate":"Fri, 22 Mar 2024 15:14:36 +0000","timestamp":1711120476,"summary":"In modern C++, as in many popular languages, you can create ‘lambdas’. Effectively, they are potentially anonymous function instances that you can create on the fly as you are programming, possibly inside another function. The following is a simple example. auto return1 = [](int n) -> int { return 1; }; What about recursive functions? … Continue reading Passing recursive C++ lambdas as function pointers"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"Measuring your system’s performance using software  (Go edition)","link":"https://lemire.me/blog/2024/03/17/measuring-your-systems-performance-using-software-go-edition/","author":"Daniel Lemire","rawPubDate":"Sun, 17 Mar 2024 21:24:01 +0000","timestamp":1710710641,"summary":"When programming software, we are working over an abstraction over a system. The computer hardware may not know about your functions, your variables, and your data. It may only see bits and instructions. Yet to write efficient software, the programmer needs to be aware of the characteristics of the underlying system. Thankfully, we can also … Continue reading Measuring your system’s performance using software  (Go edition)"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"How to read files quickly in JavaScript","link":"https://lemire.me/blog/2024/03/12/how-to-read-files-quickly-in-javascript/","author":"Daniel Lemire","rawPubDate":"Tue, 12 Mar 2024 15:43:09 +0000","timestamp":1710258189,"summary":"Suppose you need to read several files on a server using JavaScript. There are many ways to read files in JavaScript with a runtime like Node.js. Which one is best? Let us consider the various approaches. Using fs.promises const fs = require('fs/promises'); const readFile = fs.readFile; readFile(\"lipsum.txt\", { encoding: 'utf-8' }) .then((data) => {...}) .catch((err) … Continue reading How to read files quickly in JavaScript"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"How many political parties rule Canada? Fun with statistics","link":"https://lemire.me/blog/2024/03/08/how-many-political-parties-rule-canada-fun-with-statistics/","author":"Daniel Lemire","rawPubDate":"Fri, 08 Mar 2024 15:59:04 +0000","timestamp":1709913544,"summary":"Canada has several political parties with elected member of parliament: the Liberals, the Conservatives, the Bloc Québecois, de NDP and the Green. But do they behave as distinct political parties when voting, or are they somehow aligned? Voting data for the member of parliament in Canada is easily accessible as JSON or XML. Thus I … Continue reading How many political parties rule Canada? Fun with statistics"},{"feedUrl":"https://lemire.me/blog/feed/","feedTitle":"Daniel Lemire's blog","title":"Book review: Theft of Fire by Devon Eriksen","link":"https://lemire.me/blog/2024/02/24/book-review-theft-of-fire-by-devon-eriksen/","author":"Daniel Lemire","rawPubDate":"Sat, 24 Feb 2024 18:35:03 +0000","timestamp":1708799703,"summary":"When I was young, science fiction was the genre of choice for many engineers and scientists. But the genre declined significantly in recent years. Part of the problem is the rise dystopian fiction. In the imagined future, we are no longer conquering space or developing new fantastic technologies, but rather, increasingly, battling the consequences of … Continue reading Book review: Theft of Fire by Devon Eriksen"}]